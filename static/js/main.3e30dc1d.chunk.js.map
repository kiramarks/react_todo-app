{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Todo","state","editMode","tempTitle","startEditMode","setState","props","todo","title","handleChangingTitle","target","value","handleEditingBlur","editCurrentTitle","trim","length","id","editOnKeyDown","key","this","deleteTodo","changeStatus","className","classNames","editing","completed","type","onChange","checked","onDoubleClick","onClick","onBlur","onKeyDown","autoFocus","React","Component","TodoList","todos","map","App","filter","activeButton","handleInputTitle","addNewTodo","event","uuidv4","preventDefault","newTitle","name","clearCompleted","selectAll","cacheTodos","JSON","parse","localStorage","getItem","prevState","saveToLocalStorage","stringify","setItem","currentTodos","activeTodos","completedTodos","onSubmit","placeholder","every","htmlFor","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e30dc1d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class Todo extends React.Component {\n  state = {\n    editMode: false,\n    tempTitle: '',\n  }\n\n  startEditMode = () => (\n    this.setState({\n      editMode: true,\n      tempTitle: this.props.todo.title,\n    }))\n\n  handleChangingTitle = ({ target }) => {\n    this.setState({\n      tempTitle: target.value,\n    });\n  }\n\n  handleEditingBlur = ({ target }) => {\n    const { todo, editCurrentTitle } = this.props;\n    const tempTitle = target.value;\n\n    if (tempTitle.trim().length !== 0) {\n      editCurrentTitle(todo.id, tempTitle);\n    } else {\n      editCurrentTitle(todo.id, todo.title);\n    }\n\n    this.setState({ editMode: false });\n  }\n\n  editOnKeyDown = ({ target, key }) => {\n    const { todo, editCurrentTitle } = this.props;\n\n    const tempTitle = target.value;\n\n    if (key === 'Enter' && tempTitle.trim().length !== 0) {\n      editCurrentTitle(todo.id, tempTitle);\n      this.setState({ editMode: false });\n    }\n\n    if (key === 'Escape') {\n      this.setState({ editMode: false });\n    }\n  }\n\n  render() {\n    const { todo, deleteTodo, changeStatus } = this.props;\n    const { editMode, tempTitle } = this.state;\n\n    return (\n      <li className={classNames({\n        editing: editMode,\n        completed: todo.completed,\n      })}\n      >\n        <div className=\"view\">\n          <input\n            id={todo.id}\n            type=\"checkbox\"\n            className=\"toggle\"\n            onChange={() => changeStatus(todo.id)}\n            checked={todo.completed}\n          />\n          <label onDoubleClick={this.startEditMode}>{todo.title}</label>\n          <button\n            type=\"button\"\n            id={todo.id}\n            className=\"destroy\"\n            onClick={() => deleteTodo(todo.id)}\n          />\n        </div>\n        {editMode && (\n          <input\n            type=\"text\"\n            id={todo.id}\n            className=\"edit\"\n            value={tempTitle}\n            onBlur={this.handleEditingBlur}\n            onChange={this.handleChangingTitle}\n            onKeyDown={this.editOnKeyDown}\n            autoFocus\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  editCurrentTitle: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    edited: PropTypes.bool,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from './Todo';\n\nexport const TodoList = ({\n  todos,\n  editCurrentTitle,\n  deleteTodo,\n  changeStatus,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <Todo\n        todo={todo}\n        key={todo.id}\n        id={todo.id}\n        deleteTodo={deleteTodo}\n        changeStatus={changeStatus}\n        editCurrentTitle={editCurrentTitle}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  editCurrentTitle: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoList } from './components/TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    title: '',\n    filter: '',\n    activeButton: '',\n  }\n\n  componentDidMount() {\n    const cacheTodos = JSON.parse(localStorage.getItem('todos'));\n\n    if (cacheTodos) {\n      this.setState({ todos: cacheTodos });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { todos } = this.state;\n\n    if (prevState.todos !== todos) {\n      this.saveToLocalStorage();\n    }\n  }\n\n  handleInputTitle = ({ target }) => {\n    this.setState({\n      title: target.value,\n    });\n  }\n\n  addNewTodo = (event) => {\n    if (this.state.title.trim() !== '') {\n      this.setState(state => ({\n        todos: [\n          ...state.todos,\n          {\n            id: uuidv4(),\n            title: state.title,\n            completed: false,\n          }],\n        title: '',\n      }));\n    }\n\n    event.preventDefault();\n  }\n\n  editCurrentTitle = (id, newTitle) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title: newTitle,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  changeStatus = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  filter = ({ target: { name } }) => {\n    this.setState({\n      filter: name,\n      activeButton: name,\n    });\n  }\n\n  clearCompleted = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.completed === false),\n    }));\n  }\n\n  selectAll = ({ target }) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        completed: target.checked,\n      })),\n    }));\n  }\n\n  saveToLocalStorage() {\n    const todos = JSON.stringify(this.state.todos);\n\n    localStorage.setItem('todos', todos);\n  }\n\n  render() {\n    const {\n      todos,\n      title,\n      filter,\n      activeButton,\n    } = this.state;\n\n    let currentTodos = [...todos];\n    const activeTodos = currentTodos.filter(todo => !todo.completed);\n    const completedTodos = currentTodos.filter(todo => todo.completed);\n\n    if (filter === 'active') {\n      currentTodos = activeTodos;\n    }\n\n    if (filter === 'completed') {\n      currentTodos = completedTodos;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.addNewTodo}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleInputTitle}\n              value={title}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          {todos.length > 0 && (\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                onChange={this.selectAll}\n                checked={todos.every(todo => todo.completed)}\n              />\n              <label htmlFor=\"toggle-all\">\n                Mark all as complete\n              </label>\n            </>\n          )}\n\n          <TodoList\n            todos={currentTodos}\n            deleteTodo={this.deleteTodo}\n            changeStatus={this.changeStatus}\n            editCurrentTitle={this.editCurrentTitle}\n          />\n        </section>\n        {todos.length > 0 && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {activeTodos.length === 1\n                ? `${activeTodos.length} todo left`\n                : `${activeTodos.length} todos left`\n              }\n            </span>\n\n            <ul className=\"filters\">\n              <li>\n                <a\n                  name=\"all\"\n                  href=\"#/\"\n                  className={activeButton === 'all' ? 'selected' : ''}\n                  onClick={this.filter}\n                >\n                  All\n                </a>\n              </li>\n\n              <li>\n                <a\n                  name=\"active\"\n                  href=\"#/active\"\n                  className={activeButton === 'active' ? 'selected' : ''}\n                  onClick={this.filter}\n                >\n                  Active\n                </a>\n              </li>\n              <li>\n                <a\n                  name=\"completed\"\n                  href=\"#/completed\"\n                  className={activeButton === 'completed' ? 'selected' : ''}\n                  onClick={this.filter}\n                >\n                  Completed\n                </a>\n              </li>\n            </ul>\n            {completedTodos.length > 0 && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={this.clearCompleted}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}